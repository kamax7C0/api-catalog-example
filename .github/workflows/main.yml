name: Publish APIs
on:
    workflow_dispatch:
jobs:
  build-order-api-java:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@main
    - name: Set up JDK 17
      uses: actions/setup-java@main
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -f order-api-java/pom.xml clean verify
    - name: Upload artifacts
      uses: actions/upload-artifact@main
      with:
        name: order-api-java-artifacts
        path: |
          order-api-java/target/openapi/openapi.json
          order-api-java/src/docs

  build-stock-api-tsoa:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@main
    - name: Use Node.js
      uses: actions/setup-node@main
      with:
        node-version: '16'
    - name: Install dependencies
      run: cd retail-stock-management-api-tsoa && npm install
    - name: Build Express project with TSOA
      run: cd retail-stock-management-api-tsoa && npm run build
    - name: Upload artifacts
      uses: actions/upload-artifact@main
      with:
        name: stock-api-express-tsoa-artifacts
        path: |
          retail-stock-management-api-tsoa/build/openapi/swagger.json
          retail-stock-management-api-tsoa/src/docs

  publish-api:
    needs: [build-order-api-java, build-stock-api-tsoa]
    runs-on: ubuntu-latest
    container:
      image: node:latest
    env:
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
      ANYPOINT_ORG_ID: ${{ secrets.ANYPOINT_ORGID }}
      ANYPOINT_HOST: ${{ secrets.ANYPOINT_HOST }}
    steps:
    - name: Checkout code
      uses: actions/checkout@main
    - name: Download order-api-java artifacts
      uses: actions/download-artifact@main
      with:
        name: order-api-java-artifacts
        path: order-api-java
    - name: Download stock-api-express-tsoa artifacts
      uses: actions/download-artifact@main
      with:
        name: stock-api-express-tsoa-artifacts
        path: retail-stock-management-api-tsoa
    - name: Install api-catalog-cli
      run: npm install -g api-catalog-cli@latest
    - name: Publish API to Anypoint Exchange
      run: |
        api-catalog publish-asset --organization="$ANYPOINT_ORG_ID" --client_id="$ANYPOINT_CLIENT_ID" --client_secret="$ANYPOINT_CLIENT_SECRET" --host="$ANYPOINT_HOST"