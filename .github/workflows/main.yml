name: Publish APIs
on:
    workflow_dispatch:
jobs:
  build-order-api-java:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -f order-api-java/pom.xml clean verify

  build-template-api-nestjs:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.4-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: api
        ports:
          - 5432:5432
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: cd template-api-nestjs && npm install
    - name: Build NestJS project
      run: cd template-api-nestjs && npm run build
    - name: Start the application
      run: cd template-api-nestjs && npm start
    - name: Stop the application
      run: cd template-api-nestjs && npm stop
      

  build-users-api-express-tsoa:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: cd users-api-express-tsoa && npm install
    - name: Build Express project with TSOA
      run: cd users-api-express-tsoa && npm run build
    - name: Run Express project with TSOA
      run: cd users-api-express-tsoa && npm start
    - name: Stop Express project with TSOA
      run: cd users-api-express-tsoa && npm stop

  publish-api:
    needs: [build-order-api-java, build-template-api-nestjs, build-users-api-express-tsoa]
    runs-on: ubuntu-latest
    container:
      image: node:latest
    env:
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
      ANYPOINT_ORG_ID: ${{ secrets.ANYPOINT_ORGID }}
      ANYPOINT_HOST: ${{ secrets.ANYPOINT_HOST }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install api-catalog-cli
      run: npm install -g api-catalog-cli@latest
    - name: Publish API to Anypoint Exchange
      run: |
        api-catalog publish-asset --organization="$ANYPOINT_ORG_ID" --client_id="$ANYPOINT_CLIENT_ID" --client_secret="$ANYPOINT_CLIENT_SECRET" --host="$ANYPOINT_HOST"
